@using MedicalBookingService.Client.Services
@using MedicalBookingService.Shared.Models
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JS
@inject AuthClientService AuthClientService


<nav class="navbar navbar-expand-lg bg-primary" data-bs-theme="dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">Medical System</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor01"
                aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarColor01">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All" activeClass="active">
                        Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="counter" activeClass="active">
                        Counter
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="calendar" activeClass="active">
                        Calendar
                    </NavLink>
                </li>
                @if(IsAuthenticated)
                {
                    <li class="nav-item">
                        <button class="btn btn-danger" @onclick="PerformLogout">
                            Logout
                        </button>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="login" activeClass="active">
                            Login
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="signup" activeClass="active">
                            Sign up for patients
                        </NavLink>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

@code {
    private UserInfo? CurrentUser;
    private bool IsAuthenticated = false;
    private List<string> UserRoles = new();

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = await AuthClientService.GetCurrentUserAsync();

        if (CurrentUser != null)
        {
            IsAuthenticated = true;
            UserRoles = CurrentUser.Roles;
        }
    }

    private async Task PerformLogout()
    {
        var response = await Http.PostAsync("/api/auth/logout", null);

        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/login", forceLoad: true);
        }
    }

    // private async Task PerformLogout()
    // {
    //     await JS.InvokeVoidAsync("fetch", "/api/auth/logout", new
    //     {
    //         method = "POST",
    //         credentials = "include"
    //     });
        
    //     await JS.InvokeVoidAsync("location.reload");
    // }
}
