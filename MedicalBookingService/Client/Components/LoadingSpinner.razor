@using MedicalBookingService.Client.Services
@inject LoadingService LoadingService

@if (LoadingService.IsLoading)
{
    <div class="spinner-overlay">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; } = "loader"; // Default ID

    protected override void OnInitialized()
    {
        LoadingService.OnChange += StateHasChanged;
        LoadingService.OnChange += HandleLoadingServiceChange;
    }
    private void HandleLoadingServiceChange()
    {
        InvokeAsync(() =>
        {
            StateHasChanged(); // Force a re-render of this component.
        });
    }

    public void Dispose()
    {
        LoadingService.OnChange -= StateHasChanged;
        LoadingService.OnChange -= HandleLoadingServiceChange;
    }
}

<style>
    .spinner-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.5); /* dim background */
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 999999;
        /* Block all interaction */
        pointer-events: all;
        cursor: wait;
        backdrop-filter: blur(2px);
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
    }

    /* Prevent scrolling when overlay is visible */
    body.spinner-active {
        overflow: hidden;
    }
</style>