@page "/login"
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject HttpClient Http

<h3>Login</h3>

<LoadingSpinner IsLoading="_isLoading" />

<form @onsubmit="HandleLogin">
    <div id="errorMessage" class="alert alert-danger" style="display: none;"></div>

    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input id="email" name="email" type="email" class="form-control" bind="@email" required />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <input id="password" name="password" type="password" class="form-control" bind="@password" required />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</form>

@code {
    private string email = string.Empty;
    private string password = string.Empty;
    private bool _isLoading = false;

    private async Task HandleLogin()
    {
        _isLoading = true;

        var payload = new
        {
            Email = email,
            Password = password
        };

        try
        {
            var response = await Http.PostAsJsonAsync("/api/auth/login", payload);

            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/Dashboard", forceLoad: true);
            }
            else
            {
                await JS.InvokeVoidAsync("showErrorMessage", "Invalid credentials.");
            }
        }
        catch
        {
            await JS.InvokeVoidAsync("showErrorMessage", "Something went wrong. Please try again.");
        }
        finally
        {
            _isLoading = false;
        }
    }
}
