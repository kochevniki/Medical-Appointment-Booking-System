@page "/reset-password"
@inject NavigationManager Nav
@inject HttpClient Http
@using Microsoft.AspNetCore.WebUtilities
@using MedicalBookingService.Shared.Models.DTOs

<EditForm Model="model" OnValidSubmit="HandleResetPassword">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Email</label>
        <InputText @bind-Value="model.Email" class="form-control" />
    </div>

    <div class="mb-3">
        <label>New Password</label>
        <InputText @bind-Value="model.NewPassword" type="password" class="form-control" />
    </div>

    <div class="mb-3">
        <label>Confirm Password</label>
        <InputText @bind-Value="model.ConfirmPassword" type="password" class="form-control" />
    </div>

    <button class="btn btn-success">Reset Password</button>
</EditForm>

@if (ShowSuccessModal)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">Password Reset</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    Your password has been successfully reset. You can now log in with your new credentials.
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="GoToLogin">Go to Login</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private ResetPasswordDto model = new();
    private bool ShowSuccessModal = false;

    protected override void OnInitialized()
    {
        var uri = Nav.ToAbsoluteUri(Nav.Uri);
        var queryParams = QueryHelpers.ParseQuery(uri.Query);
        if (queryParams.TryGetValue("email", out var email))
            model.Email = email!;
        if (queryParams.TryGetValue("token", out var token))
            model.Token = token!;
    }

    private async Task HandleResetPassword()
    {
        var response = await Http.PostAsJsonAsync("api/account/reset-password", model);
        if (response.IsSuccessStatusCode)
        {
            ShowSuccessModal = true;
        }
        else
        {
            // Optionally handle errors
        }
    }

    private void GoToLogin()
    {
        Nav.NavigateTo("/login");
    }

    private void CloseModal()
    {
        ShowSuccessModal = false;
    }
}
